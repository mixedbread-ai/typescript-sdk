"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * mixedbread-ai
 * Discover how to convert text into embeddings with the Embeddings API. Ideal for NLP tasks like text similarity and clustering. Use top open source models or your own fine-tuned models.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Embeddings200ResponseToJSON = exports.Embeddings200ResponseFromJSONTyped = exports.Embeddings200ResponseFromJSON = exports.instanceOfEmbeddings200Response = void 0;
const Embeddings200ResponseDataInner_1 = require("./Embeddings200ResponseDataInner");
const Embeddings200ResponseUsage_1 = require("./Embeddings200ResponseUsage");
/**
 * Check if a given object implements the Embeddings200Response interface.
 */
function instanceOfEmbeddings200Response(value) {
    let isInstance = true;
    isInstance = isInstance && "model" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "usage" in value;
    return isInstance;
}
exports.instanceOfEmbeddings200Response = instanceOfEmbeddings200Response;
function Embeddings200ResponseFromJSON(json) {
    return Embeddings200ResponseFromJSONTyped(json, false);
}
exports.Embeddings200ResponseFromJSON = Embeddings200ResponseFromJSON;
function Embeddings200ResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'model': json['model'],
        'data': (json['data'].map(Embeddings200ResponseDataInner_1.Embeddings200ResponseDataInnerFromJSON)),
        'usage': (0, Embeddings200ResponseUsage_1.Embeddings200ResponseUsageFromJSON)(json['usage']),
    };
}
exports.Embeddings200ResponseFromJSONTyped = Embeddings200ResponseFromJSONTyped;
function Embeddings200ResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'model': value.model,
        'data': (value.data.map(Embeddings200ResponseDataInner_1.Embeddings200ResponseDataInnerToJSON)),
        'usage': (0, Embeddings200ResponseUsage_1.Embeddings200ResponseUsageToJSON)(value.usage),
    };
}
exports.Embeddings200ResponseToJSON = Embeddings200ResponseToJSON;
