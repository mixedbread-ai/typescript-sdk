"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * mixedbread-ai
 * Discover how to convert text into embeddings with the Embeddings API. Ideal for NLP tasks like text similarity and clustering. Use top open source models or your own fine-tuned models.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MixedbreadAiApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class MixedbreadAiApi extends runtime.BaseAPI {
    /**
     * This endpoint allows you to post text data and receive embeddings in response. The embeddings are generated using the model specified in the request body.
     * Create embeddings
     */
    embeddingsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.embeddingsRequest === null || requestParameters.embeddingsRequest === undefined) {
                throw new runtime.RequiredError('embeddingsRequest', 'Required parameter requestParameters.embeddingsRequest was null or undefined when calling embeddings.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // MIXEDBREADAI_API_KEY authentication
            }
            const response = yield this.request({
                path: `/v1/embeddings/`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.EmbeddingsRequestToJSON)(requestParameters.embeddingsRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.Embeddings200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     * This endpoint allows you to post text data and receive embeddings in response. The embeddings are generated using the model specified in the request body.
     * Create embeddings
     */
    embeddings(embeddingsRequest, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.embeddingsRaw({ embeddingsRequest: embeddingsRequest }, initOverrides);
            return yield response.value();
        });
    }
}
exports.MixedbreadAiApi = MixedbreadAiApi;
