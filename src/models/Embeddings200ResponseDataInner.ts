/* tslint:disable */
/* eslint-disable */
/**
 * mixedbread-ai
 * Discover how to convert text into embeddings with the Embeddings API. Ideal for NLP tasks like text similarity and clustering. Use top open source models or your own fine-tuned models.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Embeddings200ResponseDataInner
 */
export interface Embeddings200ResponseDataInner {
    /**
     * The generated embeddings.
     * @type {Array<number>}
     * @memberof Embeddings200ResponseDataInner
     */
    embedding?: Array<number>;
    /**
     * Index of the request text the embedding corresponds to.
     * @type {number}
     * @memberof Embeddings200ResponseDataInner
     */
    index?: number;
    /**
     * Indicates if the text was truncated for the model.
     * @type {boolean}
     * @memberof Embeddings200ResponseDataInner
     */
    wasTruncated?: boolean;
}

/**
 * Check if a given object implements the Embeddings200ResponseDataInner interface.
 */
export function instanceOfEmbeddings200ResponseDataInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function Embeddings200ResponseDataInnerFromJSON(json: any): Embeddings200ResponseDataInner {
    return Embeddings200ResponseDataInnerFromJSONTyped(json, false);
}

export function Embeddings200ResponseDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Embeddings200ResponseDataInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'embedding': !exists(json, 'embedding') ? undefined : json['embedding'],
        'index': !exists(json, 'index') ? undefined : json['index'],
        'wasTruncated': !exists(json, 'was_truncated') ? undefined : json['was_truncated'],
    };
}

export function Embeddings200ResponseDataInnerToJSON(value?: Embeddings200ResponseDataInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'embedding': value.embedding,
        'index': value.index,
        'was_truncated': value.wasTruncated,
    };
}

