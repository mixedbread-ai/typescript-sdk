/* tslint:disable */
/* eslint-disable */
/**
 * mixedbread-ai
 * Discover how to convert text into embeddings with the Embeddings API. Ideal for NLP tasks like text similarity and clustering. Use top open source models or your own fine-tuned models.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Embeddings200ResponseDataInner } from './Embeddings200ResponseDataInner';
import {
    Embeddings200ResponseDataInnerFromJSON,
    Embeddings200ResponseDataInnerFromJSONTyped,
    Embeddings200ResponseDataInnerToJSON,
} from './Embeddings200ResponseDataInner';
import type { Embeddings200ResponseUsage } from './Embeddings200ResponseUsage';
import {
    Embeddings200ResponseUsageFromJSON,
    Embeddings200ResponseUsageFromJSONTyped,
    Embeddings200ResponseUsageToJSON,
} from './Embeddings200ResponseUsage';

/**
 * 
 * @export
 * @interface Embeddings200Response
 */
export interface Embeddings200Response {
    /**
     * The embeddings model used.
     * @type {string}
     * @memberof Embeddings200Response
     */
    model: string;
    /**
     * 
     * @type {Array<Embeddings200ResponseDataInner>}
     * @memberof Embeddings200Response
     */
    data: Array<Embeddings200ResponseDataInner>;
    /**
     * 
     * @type {Embeddings200ResponseUsage}
     * @memberof Embeddings200Response
     */
    usage: Embeddings200ResponseUsage;
}

/**
 * Check if a given object implements the Embeddings200Response interface.
 */
export function instanceOfEmbeddings200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "model" in value;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "usage" in value;

    return isInstance;
}

export function Embeddings200ResponseFromJSON(json: any): Embeddings200Response {
    return Embeddings200ResponseFromJSONTyped(json, false);
}

export function Embeddings200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Embeddings200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'model': json['model'],
        'data': ((json['data'] as Array<any>).map(Embeddings200ResponseDataInnerFromJSON)),
        'usage': Embeddings200ResponseUsageFromJSON(json['usage']),
    };
}

export function Embeddings200ResponseToJSON(value?: Embeddings200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'model': value.model,
        'data': ((value.data as Array<any>).map(Embeddings200ResponseDataInnerToJSON)),
        'usage': Embeddings200ResponseUsageToJSON(value.usage),
    };
}

